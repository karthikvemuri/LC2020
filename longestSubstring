/*C++
-------
*/


class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int i = 0;
        int j = 0;
        int maxLen = 0;
        
        unordered_set<int> charSet;
        
        while(j < s.length()){
            if(charSet.find(s[j]) == charSet.end()){
                charSet.insert(s[j]);
                j++;
                maxLen = max((int)charSet.size(), maxLen);
            }
            else{
                charSet.erase(s[i]);
                i++;
            }   
        }
        return maxLen;
    }
};

/* 
Java
*/

class Solution {
    public int lengthOfLongestSubstring(String s) {
        
        int i = 0;
        int j = 0;
        int maxLen = 0;
        
        HashSet<Character> charSet = new HashSet();
        
        while(j < s.length()){
            if(charSet.contains(s.charAt(j))){
                charSet.remove(s.charAt(i));
                i++; 
            }
            else{
                charSet.add(s.charAt(j));
                j++;
                maxLen = Math.max(charSet.size(), maxLen);
            }
        }
        
        return maxLen;
        
    }
}
